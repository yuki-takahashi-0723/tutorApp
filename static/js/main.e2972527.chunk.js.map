{"version":3,"sources":["firebase/config.ts","AuthSearvis.tsx","LoggedInRoute.tsx","uikit/primaryButton.tsx","uikit/inputArea.tsx","uikit/listCard.tsx","uikit/addButton.tsx","uikit/inputButton.tsx","uikit/DeleateButton.tsx","img/banner-1571861_1920.jpg","pages/diaryItem.tsx","uikit/FormDialog.tsx","pages/diaryList.tsx","img/IMG_0931.jpeg","pages/SignIn.tsx","pages/SignUp.tsx","img/614F01DC-85BE-42C5-8998-065B2BA8186C_1_105_c.jpeg","pages/top.tsx","pages/usersList.tsx","Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","store","firestore","fieldValue","FieldValue","storage","Timestamp","AuthContext","createContext","crrentUser","undefined","AuthProvider","children","useState","user","setUser","useEffect","onAuthStateChanged","Provider","value","LoggedInRoute","Component","component","rest","useContext","render","props","to","PrimaryButton","Button","style","margin","width","color","variant","onClick","label","InputArea","TextField","required","fullWidth","multiline","rows","onChange","type","ListCard","Card","backgroundColor","avater","name","CardHeader","avatar","Avatar","aria-label","title","diaryTitle","day","CardContent","AddButton","IconButton","InputButton","fontSize","DeleteButton","Title","styled","h1","DiaryUserArea","div","GraphPaper","ContentsWrap","DiaryContentWrap","DiaryMessageWrap","DiaryContent","p","VoiceArea","VoiceInputTitle","VoiceInputPreview","DiaryItem","uid","content","messages","diary","setDiary","message","setMessage","useSpeechRecognition","transcript","resetTranscript","location","state","console","log","index","userId","diaryIndex","collection","doc","onSnapshot","snapshot","diarysData","data","diarys","reverse","marginTop","map","e","target","update","arrayRemove","push","arrayUnion","addMessage","SpeechRecognition","startListening","stopListening","FormContentWrap","FormDialog","Dialog","open","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","onChangeFirst","onChangeSecond","labelSecond","valueSecond","DialogActions","AddClick","Allwrap","CardsWrap","CardWrap","DiaryList","setdaiarys","userName","setUserName","setUserId","setOpen","setTitle","setContent","usersId","timeData","Date","year","getFullYear","month","getMonth","getDate","unshift","history","pathname","refDiary","SignInWrap","humsterImage","SignInForm","h2","InputWrap","ButtonWrap","Sumple","SignIn","email","setEmail","password","setPassword","signInWithEmailAndPassword","then","SignUpWrap","SignUpForm","SignUp","setName","createUserWithEmailAndPassword","updateProfile","displayName","catch","error","alert","TopView","TopImg","Catch","Top","UserListWrap","UserList","users","setUsers","SetName","docs","id","selectUser","add","signOut","FooterWrap","footer","CopyrightP","SmallCopy","small","Footer","AllWrap","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2972527.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n const firebaseConfig = {\n    apiKey: \"AIzaSyACR3XaRwul5b8w4MdWAhTPGcJeEEaVUI8\",\n    authDomain: \"tutor-75012.firebaseapp.com\",\n    projectId: \"tutor-75012\",\n    storageBucket: \"tutor-75012.appspot.com\",\n    messagingSenderId: \"1035514338082\",\n    appId: \"1:1035514338082:web:2ed74f73a01c84e757a37b\",\n    measurementId: \"G-Q6N6Y1LHFE\"\n  }\n firebase.initializeApp(firebaseConfig)\n  export const auth = firebase.auth()\n  export const store = firebase.firestore()\n  export const fieldValue = firebase.firestore.FieldValue\n  export const storage = firebase.storage()\n  export const timeStamp = firebase.firestore.Timestamp","\nimport React, { createContext, useEffect, useState } from 'react'\nimport {User} from '@firebase/auth-types'\nimport { auth } from './firebase/config'\n\n\ninterface IAuthContext {\n    crrentUser : User | null | undefined\n}\n\nconst AuthContext = createContext<IAuthContext>({crrentUser: undefined})\n\nconst AuthProvider = ({children}:any) => {\n    const [user,setUser]=useState<User | null | undefined>(undefined)\n    useEffect(()=>{\n        auth.onAuthStateChanged(user=>{\n            setUser(user)\n        })\n    },[])\n    return(\n        <AuthContext.Provider value={{crrentUser : user}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport {\n    AuthContext,\n    AuthProvider\n}\n\n\n","import React, { useContext } from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { AuthContext } from './AuthSearvis'\ntype Props = {\n    component : any,\n    path : string\n}\nconst LoggedInRoute:React.FC<Props> = ({component:Component,...rest}) => {\n    const user = useContext(AuthContext)\n  \n    return(\n        <Route\n            {...rest}\n            render={props=>\n                (user.crrentUser !== null) ? (\n                    <Component {...props}/>\n                ):(\n                    <Redirect to={'/signin'}/>\n                )\n            }\n        \n        />\n    )\n}\n\nexport default LoggedInRoute","import { Button } from '@material-ui/core'\nimport React from 'react'\n\n\n\n\ntype Props = {\n    label : string\n    onClick :  () => void\n}\n\n\nconst PrimaryButton:React.FC<Props> = (props) => {\n    return(\n        <Button\n        style={{margin: '10px', width:'130px'}}\n        color='primary'\n        variant='contained'\n        onClick={()=>props.onClick()}\n        >\n            {props.label}\n        </Button>\n    )\n}\n\nexport default PrimaryButton","import { TextField } from '@material-ui/core'\nimport React from 'react'\n\ntype Props = {\n    fullWidth:boolean\n    required : boolean\n    multiline:boolean\n    rows : number\n    label:string \n    onChange:(e:React.ChangeEvent<HTMLInputElement>) => void\n    value:string\n    type : string\n}\n\n\nconst InputArea:React.FC<Props> = (props) => {\n    return(\n        <>\n        <TextField\n            variant='outlined'\n            color='primary'\n            margin='dense'\n            required = {props.required}\n            fullWidth={props.fullWidth}\n            multiline={props.multiline}\n            rows={props.rows}\n            onChange={props.onChange}\n            value={props.value}\n            label={props.label}\n            type = {props.type}\n        />\n        </>\n    )\n}\n\nexport default InputArea","import { Avatar, Card, CardContent, CardHeader } from '@material-ui/core'\nimport React from 'react'\n\ntype Props = {\n    avater?:string\n    name:string\n    day?:string\n    diaryTitle?:string\n    color?:string\n\n}\n\n\nconst ListCard:React.FC<Props> = (props) => {\n    return(\n        <Card　style={{backgroundColor:props.color}}>\n            {\n                (props.avater && props.name) &&\n                <CardHeader\n                   avatar={\n                   <Avatar aria-label=\"recipe\">\n                       {props.avater}\n                   </Avatar>\n                   }\n                   title={props.name}\n                />\n\n            }\n             {\n                 (props.diaryTitle && props.day ) &&\n                <CardContent>\n                        <p>{props.day}</p>\n                        <p>{props.diaryTitle}</p>\n                </CardContent>\n\n             }\n        </Card>\n    )\n}\n\nexport default ListCard","import React from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { IconButton } from '@material-ui/core';\n\ntype Props = {\n    onClick : ()=>void\n}\n\nconst AddButton:React.FC<Props> = (props) => {\n    return(\n       <IconButton\n            onClick={()=>props.onClick()}\n       >\n           <AddCircleOutlineIcon/>\n       </IconButton>\n    )\n}\n\nexport default AddButton","import React from 'react'\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { IconButton } from '@material-ui/core';\n\ntype Props = {\n    label : string\n    onClick : ()=>void\n}\n\nconst InputButton:React.FC<Props> = (props) => {\n    return(\n       <IconButton\n            onClick={()=>props.onClick()}\n       >\n           <span style={{fontSize:'15px',margin:'5px'}}>{props.label}</span>\n           <BorderColorIcon/>\n       </IconButton>\n    )\n}\n\nexport default InputButton","import React from 'react'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton } from '@material-ui/core';\n\ntype Props = {\n    label : string\n    onClick : ()=>void\n}\n\nconst DeleteButton:React.FC<Props> = (props) => {\n    return(\n       <IconButton\n            onClick={()=>props.onClick()}\n       >\n           <span style={{fontSize:'15px',margin:'5px'}}>{props.label}</span>\n           <DeleteIcon/>\n       </IconButton>\n    )\n}\n\nexport default DeleteButton","export default __webpack_public_path__ + \"static/media/banner-1571861_1920.3a5f5a13.jpg\";","import React, { useContext, useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { AuthContext } from '../AuthSearvis'\nimport {  fieldValue, store } from '../firebase/config'\nimport { AddButton, DeleteButton, InputArea, InputButton, PrimaryButton } from '../uikit'\nimport SpeechRecognition,{useSpeechRecognition} from 'react-speech-recognition' \nimport styled from 'styled-components'\nimport GraphPaper from '../img/banner-1571861_1920.jpg'\n\n\nconst Title = styled.h1`\n    margin: 0;\n    background: linear-gradient(rgba(179, 255, 239, 0.925), rgba(255, 254, 179, 0.6));\n    `\n\n    const DiaryUserArea = styled.div`\n        padding : 10px;\n        margin:0;\n        position: relative;\n        background: linear-gradient(rgba(179, 255, 239, 0.925), rgba(255, 254, 179, 0.6)), url(${GraphPaper}) \n        center / cover;\n    `\nconst ContentsWrap = styled.div`\n    margin: 0 30px 0 30px ;\n    \n`\nconst DiaryContentWrap = styled.div`\n    border:black solid 0.5px;\n    min-height:200px;\n\n`\nconst DiaryMessageWrap = styled.div`\n    border:#93fc0a solid 0.5px;\n    min-height:200px;\n    margin-bottom:10px;\n    background-color:#e7fa7b;\n`\n \n\nconst DiaryContent = styled.p`\n    margin:0;\n    padding:10px;\n    white-space:pre-line;\n`\nconst VoiceArea = styled.div`\n    text-align:center;\n    background:  linear-gradient(rgba(179, 255, 239, 0.925), rgba(255, 254, 179, 0.6)), url(${GraphPaper});\n    padding:10px;\n\n`\n\n\nconst VoiceInputTitle = styled.p`\n    margin:10px;\n`\n\nconst VoiceInputPreview = styled.div`\n    text-align:center;\n    height:200px;\n    h3 {\n        margin:0;\n    }\n    span {\n        font-size:20px;\n        font-weight:bold;\n    }\n    p {\n        border:black solid 0.2px;\n        margin:0;\n    }\n`\n\n\ntype Props = {\n    location: {\n        state:{\n           index : number\n           userId : string\n        }\n    }\n}\ntype diary ={\n    title :string\n    day : string\n    content: string\n    messages: string[]\n}\n\nconst DiaryItem:React.FC<Props> = (props) => {\n    \n    const user = useContext(AuthContext)\n    const uid = user.crrentUser?.uid\n    const [diary,setDiary]=useState<diary>({title:'',day:'',content:'',messages:[]})\n    const [message,setMessage]=useState('')\n    const inputMessage = (e:React.ChangeEvent<HTMLInputElement>) =>{\n        setMessage(e.target.value)\n    }\n    // const handleSpeak = (text:string) => {\n    //     console.log('スピーチ開始')\n    //     const options = new SpeechSynthesisUtterance(text)\n    //     options.lang = 'ja-Jp'\n    //     window.speechSynthesis.speak(options)    \n    // }\n    \n    \n    \n    const addMessage = () => {\n        if(message === ''){\n            return false\n        }\n        store.collection(`master:${uid}`).doc(props.location.state.userId).update({\n            diarys : fieldValue.arrayRemove(diary)\n        })\n        if(diary.messages === undefined){\n            diary.messages = []\n            diary.messages.push(message)\n            console.log(diary)\n        }else{\n            diary.messages.push(message)\n            console.log(diary)\n        }\n        store.collection(`master:${uid}`).doc(props.location.state.userId).update({\n            diarys : fieldValue.arrayUnion(diary)\n        })\n        setMessage('')    \n    }\n\n\n\n    const {transcript, resetTranscript} = useSpeechRecognition()\n\n\n \n    \n    useEffect(()=>{\n        if(props.location.state !== undefined ){\n            console.log(props.location.state.index)\n            console.log(props.location.state.userId)\n            const diaryIndex = props.location.state.index\n            const userId = props.location.state.userId\n            store.collection(`master:${uid}`).doc(userId)\n                .onSnapshot(snapshot=>{\n                    const diarysData = snapshot.data()\n                    if(diarysData !== undefined){\n                        setDiary(diarysData.diarys.reverse()[diaryIndex])\n                      }\n                })\n\n        }\n        \n    },[props.location.state,uid])\n   \n    // console.log(diary.messages)\n\n   \n    return(\n        <>\n            \n            {\n                props.location.state === undefined && \n                <Redirect to='/userlist'/>\n            }\n            \n            <Title>教育日誌</Title>\n            <DiaryUserArea>\n                <ContentsWrap>\n                    <div>\n                        <h2 style={{marginTop:'0'}}>タイトル</h2>\n                        <p>{diary.title}</p>\n                        <h2>日付</h2>\n                        <p>{diary.day}</p>\n                        <h2>内容</h2>\n                        <DiaryContentWrap>\n                            <DiaryContent>\n                                {diary.content}\n                            </DiaryContent>\n                        </DiaryContentWrap>\n                    </div>\n                </ContentsWrap>\n\n            </DiaryUserArea>\n\n            <ContentsWrap>\n                <h3>スタッフよりメッセージ</h3>\n                {\n                    diary.messages &&\n                    diary.messages.map((message,index)=>{\n                        return(\n                          <DiaryMessageWrap>\n                              <DiaryContent key={index}>{message}</DiaryContent>\n                          </DiaryMessageWrap>\n                        )\n                    })\n                }\n                \n                <InputArea\n                    required = {true}\n                    fullWidth={true}\n                    multiline={true}\n                    rows={7}\n                    onChange={inputMessage}\n                    value={message}\n                    label={'メッセージを残せます'}\n                    type = {'text'}\n                \n                />\n                <span>メッセージを追加する</span>\n                <AddButton\n                    onClick={()=>addMessage()}\n                />\n                </ContentsWrap>\n                <VoiceArea>\n                    <ContentsWrap>\n                        <VoiceInputTitle>音声入力はこちらから</VoiceInputTitle>\n                        <p>chrome以外のブラウザやihoneやipadでは音声認識は動作しません</p>\n                        {\n                            transcript &&\n                            <VoiceInputPreview>\n                                　      <span>音声入力プレビュー</span>\n                                        <p>{transcript}</p>\n                                        <InputButton label={'音声情報を入力欄に書き込む'}　onClick={()=>setMessage(message + transcript)}/>\n                                        <DeleteButton label={'音声情報を削除する'}　onClick={()=>resetTranscript()}/>\n\n                            </VoiceInputPreview>\n                        }\n                        <PrimaryButton label={'音声入力開始'}　onClick={()=>SpeechRecognition.startListening()}/>\n                        <PrimaryButton label={'音声入力終了'}　onClick={()=>SpeechRecognition.stopListening()}/>\n                    \n                    </ContentsWrap>\n                </VoiceArea>\n\n        </>\n    )\n}\n\nexport default DiaryItem","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport { InputArea } from '.'\nimport styled from 'styled-components'\n\nconst FormContentWrap = styled.div`\n    text-align:center;\n`\n\n\ntype Props = {\n    title : string\n    open : boolean\n    handleClose : () => void   \n    onChangeFirst : (e:React.ChangeEvent<HTMLInputElement>) => void\n    onChangeSecond? : (e:React.ChangeEvent<HTMLInputElement>) => void\n    value : string \n    valueSecond? : string \n    label : string \n    labelSecond? : string\n    type : string\n    AddClick : () => void\n}\n\n\n\nconst FormDialog:React.FC<Props>=(props)=>{\n    return(\n        <Dialog\n            fullWidth={true}\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <FormContentWrap>\n\n                <DialogTitle>{props.title}</DialogTitle>\n                <DialogContent>\n                    <div>\n                        <InputArea\n                            required = {true}\n                            fullWidth={true}\n                            multiline={false}\n                            rows={1}\n                            onChange={props.onChangeFirst}\n                            value={props.value}\n                            label={props.label}\n                            type = {props.type} \n                        />\n                    </div>\n                    <div>\n                        {\n                        props.onChangeSecond && props.labelSecond &&((props.valueSecond==='')||props.valueSecond) &&\n                                <InputArea\n                                    required = {true}\n                                    fullWidth={true}\n                                    multiline={true}\n                                    rows={5}\n                                    onChange={props.onChangeSecond}\n                                    value={props.valueSecond}\n                                    label={props.labelSecond}\n                                    type = {props.type} \n                                />   \n                        }\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.AddClick}>\n                        登録する\n                    </Button>\n                    <Button onClick={()=>props.handleClose()}>\n                        閉じる\n                    </Button>\n                </DialogActions>\n            </FormContentWrap>\n        </Dialog>\n    )\n}\n\nexport default FormDialog","\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { AuthContext } from '../AuthSearvis'\nimport { store　} from '../firebase/config'\nimport { AddButton, ListCard } from '../uikit'\nimport FormDialog from '../uikit/FormDialog'\nimport * as H from 'history'\nimport styled from 'styled-components'\nimport GraphPaper from '../img/banner-1571861_1920.jpg'\n\nconst Allwrap = styled.div`\n    margin : 0;\n    position: relative;\n    width: 100%;\n    min-height: 100vh;\n    background: linear-gradient(rgba(255, 254, 179, 0.925), rgba(255, 254, 179, 0.6)), url(${GraphPaper}) \n    center / cover;\n`\nconst Title = styled.h1`\n    margin: 0;\n`\n\nconst CardsWrap = styled.div`\n    @media (min-width:600px){\n        display:flex;\n        flex-wrap:wrap;  \n    }\n\n`\n\nconst CardWrap = styled.div`\n    margin:20px;\n    @media (min-width:600px){\n        width:230px;\n    }\n`\n\n\n\ntype Props = {\n    location: {\n        state:{\n            userId : string\n            name : string\n        }\n    }\n    history : H.History\n\n}\ntype diary = {\n    title :string\n    day : string\n    content: string\n}[]\n\n\n\nconst DiaryList:React.FC<Props> = (props) => {\n    const user = useContext(AuthContext)\n    const uid = user.crrentUser?.uid\n    \n    const [diarys,setdaiarys]=useState<diary>([])\n    const [userName,setUserName]=useState('')\n    const [userId,setUserId]=useState('')\n    const [open,setOpen]=useState(false)\n    const [title,setTitle]=useState('')\n    const [content,setContent]=useState('')\n    const handleOpen = () =>{\n        setOpen(true)\n    }\n    const handleClose = () => {\n        setTitle('')\n        setContent('')\n        setOpen(false)\n    }\n    const inputTitle = (e:React.ChangeEvent<HTMLInputElement>)=>{\n        setTitle(e.target.value)\n    }\n    const inputContent = (e:React.ChangeEvent<HTMLInputElement>)=>{\n        setContent(e.target.value)\n    }\n    \n    \n    \n    \n    const addDiary = () => {\n        const timeData = new Date()\n        const year = timeData.getFullYear()\n        const month = timeData.getMonth()+1\n        const day = timeData.getDate()\n        diarys.unshift({title: title, day: `${year}年　${month}月　${day}日`, content: content})\n        store.collection(`master:${uid}`).doc(userId).update({\n            diarys : diarys.reverse(),\n        })\n       handleClose()\n    }\n\n    const refDiary = (index:number) => {\n        props.history.push({\n            pathname: '/diaryitem',\n            state : {\n               index :　index,\n               userId : userId\n            }\n        })\n    }\n    useEffect(()=> {\n        if(uid !== undefined && props.location.state !== undefined){\n          const usersId = props.location.state.userId\n          \n          store.collection(`master:${uid}`).doc(usersId)\n            .onSnapshot(snapshot => {\n              const data = snapshot.data()\n              if(data !== undefined){\n                  setUserName(data.userName)\n                  setdaiarys(data.diarys.reverse()) \n                  setUserId(usersId)\n                }\n            });\n        }\n    }, [props.location.state,uid]); \n   \n    return(\n        <Allwrap>\n            {\n                props.location.state !== undefined && \n                <div>\n                    <Title>学習振り返り一覧</Title>\n                    <h2>名前：{userName}</h2>\n                        <span>新しい振り返り記録を追加する</span>\n                       <AddButton\n                           onClick={()=>handleOpen()}\n                       />\n                       <FormDialog\n                           title = '振り返り入力フォーム'\n                           open = {open}\n                           handleClose ={handleClose}  \n                           onChangeFirst = {inputTitle}\n                           onChangeSecond={inputContent}\n                           value = {title}\n                           label =　'記録のタイトルを入力'\n                           valueSecond={content}\n                           labelSecond={'今日教わったことや反省'}\n                           type = 'text'\n                           AddClick = {addDiary}\n                       />\n                    <CardsWrap>\n                        {\n                        diarys.map((diary,index)=>{\n                                \n                                return <CardWrap onClick={()=>refDiary(index)}> \n                                            <ListCard\n                                                name={''}\n                                                day={diary.day}\n                                                diaryTitle={diary.title}\n                                                key={index}\n                                                color={'pink'}\n                                            />  \n                                        </CardWrap>\n                            })\n                        }\n                    </CardsWrap>\n                </div>\n            }\n            {\n                props.location.state === undefined &&\n                <Redirect to='/userlist'/>\n            }\n        </Allwrap>\n    )\n}\n\nexport default DiaryList","export default __webpack_public_path__ + \"static/media/IMG_0931.205374e0.jpeg\";","import React, { useContext, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { AuthContext } from '../AuthSearvis'\nimport { auth } from '../firebase/config'\nimport { InputArea, PrimaryButton } from '../uikit'\nimport * as H from 'history'\nimport styled from 'styled-components'\nimport humsterImage from '../img/IMG_0931.jpeg'\nconst SignInWrap = styled.div`\n    margin:0;\n    padding:0;\n    width:100vw;\n    height:100vh;\n    position: relative;\n    width: 100%;\n    min-height: 100vh;\n    background: url(${humsterImage})\n    center / cover;\n`\nconst SignInForm = styled.div`\n    width:80vw;\n    height:60vh;\n    text-align:center;\n    background-color:rgba(255,255,255,0.5); //後ほど変更を行う\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    @media (min-width:600px){\n      width:60vw;\n    }  \n    \n\n    \n`\nconst Title = styled.h2`\n    margin:0 ;\n`\n\nconst InputWrap = styled.div`\n    width:50vw;\n    margin:0 auto;\n    text-align:center;\n`\nconst ButtonWrap = styled.div`\n    text-align:center;\n`\nconst Sumple = styled.div`\n    background-color:rgba(255,255,255,0.5);\n    position:absolute;\n    top: 85%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n`\n\n\ntype Props = {\n    history : H.History\n}\n\n\nconst SignIn:React.FC<Props> = ({history}) => {\n    const [email,setEmail]=useState('')\n    const [password,setPassword]=useState('')\n   \n    const inputEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.target.value);\n      };\n    const inputPassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value);\n      };\n    const user = useContext(AuthContext)\n    console.log(user)\n    if(user.crrentUser !== null){\n        return (<Redirect to='/userlist'/>)\n    }\n\n    const signInAciton = () =>{\n        if(email==='' || password === '' || password === ''){\n            return false\n        }else{\n           auth.signInWithEmailAndPassword(email,password)\n           .then(user=>{\n               console.log(user)\n               history.push('/userlist')\n           })\n        }\n    }\n    \n    return(\n        <SignInWrap>\n            <SignInForm>\n                <Title>サインイン</Title>\n                <InputWrap>\n                    <div>\n                        <InputArea\n                            required = {true}\n                            fullWidth={true}\n                            multiline={false}\n                            rows={1}\n                            onChange={inputEmail}\n                            value={email}\n                            label={'メールアドレス'}\n                            type={'Email'}\n                        />\n                    </div>\n                    <div>\n                        <InputArea\n                            required = {true}\n                            fullWidth={true}\n                            multiline={false}\n                            rows={1}\n                            onChange={inputPassword}\n                            value={password}\n                            label={'パスワード'}\n                            type={'Password'}\n                        />\n\n                    </div>\n                    <ButtonWrap>\n                        <PrimaryButton\n                            label={'サインイン'}\n                            onClick={signInAciton}\n                        />\n                    </ButtonWrap>\n                    <Sumple>\n                    <p>サンプルIDでお試しできます！</p>\n                    <p>mail: chuta@asd.ne.jp</p>\n                    <p>password: chutasample</p>\n                </Sumple>\n                </InputWrap>\n            </SignInForm>\n\n        </SignInWrap>\n    )\n}\n\nexport default SignIn","import React, { useContext, useState } from 'react'\nimport { auth } from '../firebase/config'\nimport { InputArea, PrimaryButton } from '../uikit'\nimport * as H from 'history'\nimport { AuthContext } from '../AuthSearvis'\nimport { Redirect } from 'react-router-dom'\nimport styled from 'styled-components'\nimport humsterImage from '../img/IMG_0931.jpeg'\n\nconst SignUpWrap = styled.div`\n    margin:0;\n    padding:0;\n    width:100vw;\n    height:100vh;\n    position: relative;\n    width: 100%;\n    min-height: 100vh;\n    background: url(${humsterImage})\n    center / cover;\n`\nconst SignUpForm = styled.div`\n    width:80vw;\n    height:60vh;\n    text-align:center;\n    background-color:rgba(255,255,255,0.5); //後ほど変更を行う\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    @media (min-width:600px){\n      width:60vw;\n    }  \n    \n\n    \n`\nconst Title = styled.h2`\n    margin:0 ;\n`\n\nconst InputWrap = styled.div`\n    width:50vw;\n    margin:0 auto;\n    text-align:center;\n`\nconst ButtonWrap = styled.div`\n    text-align:center;\n`\n\n\n\n\n\ntype Props = {\n    history : H.History\n}\n\nconst SignUp:React.FC<Props> = ({history}) => {\n    const [email,setEmail]=useState('')\n    const [password,setPassword]=useState('')\n    const[name,setName]=useState('')\n    const inputEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.target.value);\n      };\n    const inputPassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value);\n      };\n    const inputName = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value);\n      };\n    const user = useContext(AuthContext)\n    if(user.crrentUser !== null){\n       <Redirect to='/userlist'/>\n    }\n\n    const signUpAciton = () =>{\n        if(email==='' || password === '' || name === ''){\n            return false\n        }else{\n            auth.createUserWithEmailAndPassword(email,password)\n                .then(({user})=>{\n                    user?.updateProfile({\n                        displayName: name\n                    })\n                    history.push('/userlist')\n                })\n                .catch(error=>{\n                    alert(error)\n                })\n        }\n    }\n    \n    return(\n        <SignUpWrap>\n            <SignUpForm>\n                <Title>サインアップ</Title>\n                <InputWrap>\n                    <div>\n                        <InputArea\n                            required = {true}\n                            fullWidth={false}\n                            multiline={false}\n                            rows={1}\n                            onChange={inputEmail}\n                            value={email}\n                            label={'メールアドレス'}\n                            type={'Email'}\n                        />\n                    </div>\n                    <div>\n                        <InputArea\n                            required = {true}\n                            fullWidth={false}\n                            multiline={false}\n                            rows={1}\n                            onChange={inputPassword}\n                            value={password}\n                            label={'パスワード'}\n                            type={'Password'}\n                        />\n                    </div>\n                    <div>\n                        <InputArea\n                            required = {true}\n                            fullWidth={false}\n                            multiline={false}\n                            rows={1}\n                            onChange={inputName}\n                            value={name}\n                            label={'企業名(仮名加)'}\n                            type={'Text'}\n                        />\n                    </div>\n                    <ButtonWrap>\n                        <PrimaryButton\n                            label={'サインアップ'}\n                            onClick={signUpAciton}\n                        />\n                    </ButtonWrap>\n                </InputWrap>\n            </SignUpForm>\n        </SignUpWrap>\n    )\n}\n\nexport default SignUp","export default __webpack_public_path__ + \"static/media/614F01DC-85BE-42C5-8998-065B2BA8186C_1_105_c.65477c81.jpeg\";","import React from 'react'\nimport styled from 'styled-components'\nimport * as H from 'history'\nimport { PrimaryButton } from '../uikit'\nimport TopImg from '/Users/takahashiyuusei/tutorApp/tutor/src/img/614F01DC-85BE-42C5-8998-065B2BA8186C_1_105_c.jpeg'\ntype Props = {\n    history : H.History\n}\n\nconst TopView = styled.div`\n    position: relative;\n    width: 100%;\n    min-height: 100vh;\n    background: url(${TopImg})\n    center / cover;\n    \n`\n\nconst Title = styled.h1`\n    margin: 0;\n    font-size:60px;\n`\nconst Catch = styled.h2`\n    background-color:rgba(255,255,255,0.5);\n    font-size:4vw;\n    position:absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n`\n\nconst ButtonWrap = styled.div`\n    position:absolute;\n    top: 70%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n`\nconst Sumple = styled.div`\n    background-color:rgba(255,255,255,0.5);\n    position:absolute;\n    top: 85%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n`\n\n\nconst Top:React.FC<Props> = ({history}) => {\n    return (\n        <>\n            <TopView>\n                <Title>chuta</Title>\n                <Catch>ビギナー育成をみんなで行うアプリケーション</Catch>\n                <Sumple>\n                    <p>サンプルIDでお試しできます！</p>\n                    <p>mail: chuta@asd.ne.jp</p>\n                    <p>password: chutasample</p>\n                </Sumple>\n                <ButtonWrap>\n                    <PrimaryButton\n                        label={'サインイン'}\n                        onClick={()=>history.push('/signin')}\n                    />\n                    <PrimaryButton\n                        label={'新規登録'}\n                        onClick={()=>history.push('/signup')}\n                    />\n                </ButtonWrap>\n            </TopView>\n        </>\n    )\n}\n\nexport default Top","import React, { useContext } from 'react'\nimport { AddButton, ListCard, PrimaryButton } from '../uikit'\nimport { useState,useEffect } from 'react'\nimport { auth, store } from '../firebase/config';\nimport { AuthContext } from '../AuthSearvis';\nimport FormDialog from '../uikit/FormDialog';\nimport * as H from 'history'\nimport styled from 'styled-components'\nimport GraphPaper from '../img/banner-1571861_1920.jpg'\n\nconst Allwrap = styled.div`\n    margin : 0;\n    position: relative;\n    width: 100%;\n    min-height: 100vh;\n    background: linear-gradient(rgba(255, 254, 179, 0.925), rgba(255, 254, 179, 0.6)), url(${GraphPaper}) \n    center / cover;\n`\nconst Title = styled.h1`\n    margin: 0;\n`\nconst UserListWrap = styled.div`\n    margin: 0 30px 0 30px ;\n`\nconst CardsWrap = styled.div`\n    @media (min-width:600px){\n        display:flex;\n        flex-wrap:wrap;  \n    }\n\n`\n\nconst CardWrap = styled.div`\n    margin:20px;\n    @media (min-width:600px){\n        width:230px;\n    }\n`\n\nconst ButtonWrap = styled.div`\n    text-align:center;\n`\n\n\ntype user = {\n        id : string,\n        data : {\n            avater : string\n            diarys : {day: string, title: string, content:string}[]\n            userName : string\n        }\n      }\n\n\ntype Props = {\n    history : H.History\n}\n\n\nconst UserList:React.FC<Props> = ({history}) =>{\n  const user =　useContext(AuthContext)\n  const  uid =user.crrentUser?.uid\n  const [users, setUsers] = useState<any>([]);\n  const [open,setOpen]=useState(false)\n  const [name,SetName]=useState('')\n  const handleOpen = () =>{\n      setOpen(true)\n  }\n  const handleClose = () => {\n      setOpen(false)\n  }\n  const inputName = (e:React.ChangeEvent<HTMLInputElement>)=>{\n      SetName(e.target.value)\n  }\n\n  const addUser = () =>{\n        store.collection(`master:${uid}`).add({\n            avater:'new',\n            diarys:[{}],\n            userName:name \n        })\n        SetName('')\n        handleClose()\n  }\n  \n\n\n  const selectUser = (userId:string,name:string) =>{\n    console.log(userId)\n    history.push({\n     pathname: '/diarylist',\n     state : {\n         name : name,\n         userId : userId,\n     }\n    \n    })\n }\n\n\n\n      useEffect(()=> {\n          if(uid !== undefined){\n            store.collection(`master:${uid}`)\n              .onSnapshot(snapshot => {\n                 setUsers(snapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })));\n              });\n        } \n      }, [uid]); \n    \n       \n    return(\n        <Allwrap>\n          <Title>登録育成者の一覧</Title>\n          <h2>{user.crrentUser?.displayName}</h2>\n          <UserListWrap>\n              <span>新しく育成者を登録する</span>\n              <AddButton\n                  onClick={()=>handleOpen()}\n              />\n              <CardsWrap>\n                    {\n                    users.map((user:user)=>{\n                        return <CardWrap onClick={()=>selectUser(user.id,user.data.userName)}　key={user.id}> \n                                    <ListCard\n                                            avater={user.data.avater}\n                                            name={user.data.userName}\n                                            color={'yellow'}\n                                    />\n                                </CardWrap>\n                    })\n                    }\n              </CardsWrap>\n                    <FormDialog\n                        title = '育成者登録フォーム'\n                        open = {open}\n                        handleClose ={handleClose}  \n                        onChangeFirst = {inputName}\n                        value = {name}\n                        label =　'氏名'\n                        type = 'text'\n                        AddClick = {addUser}\n                    />\n                <ButtonWrap>\n                    <PrimaryButton\n                        label={'ログアウト'}\n                        onClick={()=>auth.signOut()}\n                    />\n                </ButtonWrap>\n          </UserListWrap>\n        </Allwrap>\n    )\n}\n\nexport default UserList","import React from 'react'\nimport styled from 'styled-components'\n\n\n\nconst FooterWrap = styled.footer`\n    background-image:linear-gradient(180deg,#f0ca98,#FFC7AF);\n    padding-top:15px;\n    padding-bottom:15px;\n    margin: 0 calc((100% - 100vw)/2);\n    width:100vw;\n\n`\nconst CopyrightP = styled.p`\n    text-align:center;\n    margin:0;\n`\n\nconst SmallCopy = styled.small`\n    font-size:12px;\n    color:#ffffff;\n    @media (min-width:992px){\n        font-size:15px;\n    }\n` \n\nconst Footer:React.FC = () =>{\n    return(\n        <>\n            <FooterWrap>\n                <CopyrightP>\n                    <SmallCopy>(c)2021TakahashiYuki All Rights Reserved</SmallCopy>\n                </CopyrightP>\n            </FooterWrap>\n            \n        </>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport {\n    HashRouter,\n    Switch,\n    Route\n} from 'react-router-dom'\nimport { AuthProvider } from './AuthSearvis'\nimport LoggedInRoute from './LoggedInRoute'\nimport DiaryItem from './pages/diaryItem'\nimport DiaryList from './pages/diaryList'\nimport SignIn from './pages/SignIn'\nimport SignUp from './pages/SignUp'\nimport Top from './pages/top'\nimport UserList from './pages/usersList'\nimport './style.css'\nimport styled from 'styled-components'\nimport Footer from './Footer'\n\nconst AllWrap = styled.div`\n  margin:0;\n  padding:0;\n  font-family: 'HanziPen SC';\n  width:100%;\n  height:100%;\n`\n\nconst App:React.FC = () =>{\n  return(\n    <AllWrap>\n      <AuthProvider>\n          <HashRouter>\n            <Switch>\n              <Route exact path='/signup' component={SignUp}/>\n              <Route exact path='/signIn' component={SignIn}/>\n              <LoggedInRoute path='/userlist' component={UserList}/>\n              <Route exact path='/diarylist' component={DiaryList}/>\n              <Route exact path='/diaryitem' component={DiaryItem}/>\n              <Route exact path='(/)?'component= {Top}/>      \n            </Switch>\n            <Footer/>\n          </HashRouter>\n      </AuthProvider>\n    </AllWrap>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}